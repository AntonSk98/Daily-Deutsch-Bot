spring.application.name: learn-german-with-ansk98

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/learn-german-with-ansk98-db
    username: ${db-username}
    password: ${db-password}

commands:
  command-definition:
    - path: /new_word
      with-navigation: true
      parameters:
        - key: word
          required: true
          prompt: write a new word
        - key: translation
          required: true
          prompt: write a translation
        - key: meaning
          prompt: what does this word mean?
        - key: forms
          prompt: write any forms of this word separated by . without spaces
        - key: frequency
          prompt: how frequent is this word
        - key: example
          prompt: give me an example
        - key: example-translation
          prompt: write translation for the example
    - path: /current_words
    - path: /delete_word
      parameters:
        - key: word_reference
          prompt: please provide a unique word reference
    - path: /preview

bot:
  user:
  token: '6925832793:AAFDt_BI3-3Olw6iqrvuYczCvwKgDk5Qx1w'

ai:
  params:
    model: gpt-4o-mini
    role: user
    temperature: 1
    max_tokens: 15600
    frequency_penalty: 0
    presence_penalty: 0
    response_format: json_object
  reading:
    prompts:
      auto-reading-exercise: |
        You are a professional German language tutor with many years of experience teaching students at different levels. 
        Please create a text in German at an {level} language level.
        The text should be interesting, clear, and appropriate for learners at this level.
        The text should be about: {topic}.
        Ensure that the text (not exercise but text itself) contains approximately 300-350 words, not characters or tokens.
        his is crucial to ensure adequate content for comprehension practice.
        After the text, create an exercise consisting of 10 questions and their corresponding answers based on the content of the text.
        The questions should vary in type (e.g., multiple choice, fill-in-the-blank, true/false, or short answer) but should all be directly answerable from the text provided.
        The answer must have the following JSON structure:
        {
          "title": "Dein Titel hier.",
          "text": "Dein Text hier.",
          "exercise": [
            {
              "question": "Frage 1 hier.",
              "answer": "Antwort 1 hier."
            },
            {
              "question": "Frage 2 hier.",
              "answer": "Antwort 2 hier."
            },
            ...
          ]
        }
        Ensure that the language and content are suitable for {level} level learners
        and that the text is sufficiently detailed to allow for varied and comprehensive questions.
      questions-for-text-exercise: |
        You are an experienced German tutor with many years of experience teaching students at different levels. 
        Your task is to analyze the German text I provide and perform the following tasks:
          1. Assess the CEFR level (e.g., A1, A2, B1, etc.) of the text based on its complexity, vocabulary, and grammar.
          2. Create 10 questions based on the content of the text, along with their corresponding answers. 
              The questions should vary in type (e.g., multiple choice, fill-in-the-blank, true/false, or short answer) 
              and should cover different aspects of the text (e.g., comprehension, vocabulary, grammar).
        Please return the response as a JSON object in the following structure:
        {
          "level": "CEFR level here",
          "exercise": [
            {
              "question": "Frage 1 hier.",
              "answer": "Antwort 1 hier."
            },
            {
              "question": "Frage 2 hier.",
              "answer": "Antwort 2 hier."
            },
            ...
          ]
        }
        Ensure that the questions are directly answerable from the text provided and are appropriate for the assessed CEFR level.
    auto-formatting: |
      Please format the given input using only Telegram-supported HTML tags:
      - Bold: `<b>`, `<strong>`
      - Italic: `<i>`, `<em>`
      - Underline: `<u>`, `<ins>`
      - Strikethrough: `<s>`, `<strike>`, `<del>`

      ### Input:
      - Title: `{title}`
      - Text: `{text}`
  
      ### Rules:
      1. The output must be well-readable.
      2. Use only the supported tags mentioned above.
      3. Exclude all other tags, including `<br>`, to avoid Telegram parsing errors.
      
      ### Output:
      Formatted text using only the specified tags.
      The answer must have the following JSON structure:
      {
        output: "formatted_output_here"
      }