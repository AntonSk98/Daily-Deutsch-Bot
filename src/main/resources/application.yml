spring.application.name: learn-german-with-ansk98

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/learn-german-with-ansk98-db
    username: ${db-username}
    password: ${db-password}

commands:
  command-definition:
    - path: /new_word
      with-navigation: true
      parameters:
        - key: word
          required: true
          prompt: write a new word
        - key: translation
          required: true
          prompt: write a translation
        - key: meaning
          prompt: what does this word mean?
        - key: forms
          prompt: write any forms of this word separated by . without spaces
        - key: frequency
          prompt: how frequent is this word
        - key: example
          prompt: give me an example
        - key: example-translation
          prompt: write translation for the example
    - path: /current_words
    - path: /delete_word
      parameters:
        - key: word_reference
          prompt: please provide a unique word reference
    - path: /preview

bot:
  user:
  token: '6925832793:AAFDt_BI3-3Olw6iqrvuYczCvwKgDk5Qx1w'

ai:
  params:
    token: ${ai-token}
    model: gpt-4o-mini
    role: user
    temperature: 1
    max_tokens: 15600
    frequency_penalty: 0.5
    presence_penalty: 0.5
    response_format: json_object
  reading:
    prompts:
      auto-reading-exercise: |
        You are a professional German language tutor with many years of experience teaching students at different levels. 
        Please create a text in German at an {level} language level.
        The text should be interesting, clear, and appropriate for learners at this level.
        The text should be about: {topic}.
        The text must contain at least 450 tokens.
        After the text, create an exercise consisting of 10 questions and their corresponding answers based on the content of the text.
        Those questions must make sense and should not be easily answerable by just rephrasing sentences of the text.
        The questions should vary in type.
        The answer must have the following JSON structure:
        {
          "title": "Dein Titel hier.",
          "text": "Dein Text hier.",
          "exercises": [
            {
              "question": "Frage 1 hier.",
              "answer": "Antwort 1 hier."
            },
            {
              "question": "Frage 2 hier.",
              "answer": "Antwort 2 hier."
            },
            ...
          ]
        }
        Ensure that the language and content are suitable for {level} level learners.
        Ensure that the text is sufficiently detailed to allow for varied and comprehensive questions.
      analyzing-reading-exercise: |
        You are an experienced German tutor with many years of experience teaching students at different levels. 
        I will provide a German text for you to analyze and complete the following tasks:
          1. Rephrase the text to avoid any plagiarism issues.
          2. Determine the CEFR level (e.g., A1, A2, B1, etc.) of the text based on its complexity, vocabulary, and grammar.  
          3. Develop 10 questions related to the content of the rephrased text, along with their corresponding answers. 
            The questions should be meaningful and not easily answerable by simply rephrasing sentences from the text, 
            and they should vary in type.
        Return the response as a JSON object with the following structure:
        {
          "level": "CEFR level here",
          "text" "Rephrased text here",
          "exercise": [
            {
              "question": "Question 1.",
              "answer": "Answer 1."
            },
            {
              "question": "Question 2.",
              "answer": "Answer 2."
            },
            ...
          ]
        }
        Ensure that the questions are directly answerable from the text provided and are appropriate for the assessed CEFR level.
      format-text-to-telegram: |
        Please format the given input using only Telegram-supported HTML tags:
        - Bold: `<b>`, `<strong>`
        - Italic: `<i>`, `<em>`
        - Underline: `<u>`, `<ins>`
  
        ### Input:
        - Title: `{title}`
        - Text: `{text}`
    
        ### Rules:
        1. The output must be well-readable.
        2. Use only the supported tags mentioned above.
        3. Exclude all other tags, including `<br>`, to avoid Telegram parsing errors.
        
        ### Output:
        Formatted text using only the specified tags.
        The answer must have the following JSON structure:
        {
          output: "formatted_output_here"
        }
      split-text-by-paragraphs: |
        I will give you a text.
        Please split it into paragraphs and return them in this JSON format:
        {
          "text": [
            "paragraph1",
            "paragraph2",
            "paragraph3"
          ]
        }
        Replace each paragraph with the actual text. Here's the text:
        {text}